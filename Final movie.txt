<<<<<<< HEAD
from flask import Flask     #for flask
import csv                  #for file reading
=======
from tkinter import *       #for output and input          
import pandas as pd         #for file reading
import numpy as np
>>>>>>> bfefaadaddab99f59ebb3941a45a9439c9547b15
import operator

from csv import reader
app = Flask(_name_)

@app.route('/')
def fnc():
    #key down function
   
def click():                   #functionality of the search button
filename = 'C:\\Users\\Nayab Moazam\\Python\\ml-latest-small\\movies.csv'
        dataset = pd.read_csv(filename)
        missing_values_count = dataset.isnull().sum()
        # how many total missing values do we have?
        total_cells = np.product(dataset.shape)
        total_missing = missing_values_count.sum()
        # percent of data that is missing
        a=(total_missing/total_cells) * 100
        dataset.dropna()
<<<<<<< HEAD
for ind in range(0,len(testData)):      #calculates distance from input to entry in file
                    if testData[ind] not in splitgen:
                        dist+=1
        
                for inde in range(0,len(splitgen)):     #calculates distance from entry in file to input
                    if splitgen[inde] not in testData:
                        dist+=1   
                temp.append(dist)               #total distance in temp
                temp2.append(movieID)           #movie ID corresponding to every distance in temp
=======
with open('C:\\Users\\Nayab Moazam\\Python\\ml-latest-small\\movies.csv', mode='r', encoding='UTF-8') as f:
           
temp = list()
         
temp1=list()
            
temp2=list()
            
enterText=textEntry.get()   #this collects the text from entry box
         
Output.delete(0.0,END)
            
moviieName=enterText
            
reader = csv.reader(line.replace('  ', ',') for line in f)   
            
my_list = list(reader)
 for i in range(1,len(my_list)):
                if my_list[i][1]==moviieName:
                    mygenres=my_list[i][2]                  #selecting genres from all data
            finalgenres=mygenres.rstrip('\n').split('|')    #splitting tht genres of the input movie
            testData=finalgenres
        with open('C:\\Users\\Nayab Moazam\\Python\\ml-latest-small\\movies.csv', mode='r', encoding='UTF-8') as p:    
            for line in p:
                dist=0
                fields = line.rstrip('\n').split(',')
                movieID = fields[0]             #all movie ids here
                name = fields[1]                #all names here
                genres=fields[2]                #all genres here
                splitgen=genres.rstrip('\n').split('|')     #splitting all genres in a list
	        for ind in range(0,len(testData)):      #calculates distance from input to entry in file
                    if testData[ind] not in splitgen:
                        dist+=1
        
                for inde in range(0,len(splitgen)):     #calculates distance from entry in file to input
                    if splitgen[inde] not in testData:
                        dist+=1   
                temp.append(dist)               #total distance in temp
                temp2.append(movieID)           #movie ID corresponding to every distance in temp
for i in range(0,20):               #selecting top 20 min distance movies 
                min1=float('inf')
                for j in range(0,len(temp)):
                    if temp[j]<min1:
                        min1=temp[j]
                        min2=temp2[j]
                temp.remove(min1)        
                temp1.append(min2)
                temp2.remove(min2)
        movied=temp1                    #movied contains the 20 movies with min distance
        ratingStore= list()
        movieStore=list()
        ratingList=list()
        avg2rating=list()
        with open('C:\\Users\\Nayab Moazam\\Python\\ml-latest-small\\ratings.csv', mode='r', encoding='UTF-8') as g:
            line=0
            i=0
            for line in g:
                fields = line.rstrip('\n').split(',')
                movieID = fields[1]
                ratingSt=fields[2]
                if(ratingSt!='rating'):     #converting rating to float
                    rating=float(ratingSt)
                    ratingList.append(rating)       #all ratings
                movieStore.append(movieID)          #all movie ids
		avg=0
            #rating store saves the ratings of all the 20 movies that were passed by the knn 
            for j in range(0,len(movied)):
                for j1 in range(1,len(movieStore)):
                    if(movied[j]==movieStore[j1]): 
                        ratingStore.append(ratingList[j1-1]) 
                        i=i+1
                #ratings.csv contains the ratings of the movie.
                #one movie may be rated more than once by different users
                #calculating the average of all the ratings of the 20 movies
                if i!=0:
                    sumOfrating=sum(ratingStore)  
                    avg=sumOfrating/i 
                    ratingStore=[]
                    sumOfrating=0
                    avg2rating.append(avg)          #list of averages
finalid=list()  
            for l in range(0,6):                    #returning top 6 movies to be recommended
                max1=-float('inf')
                for p in range(0,len(avg2rating)):
                    if avg2rating[p]>max1:
                        max1=avg2rating[p]
                        max2=temp1[p]
                avg2rating.remove(max1)
                finalid.append(max2)
                temp1.remove(max2)        
line=0
            idslist=list()
            titlelist=list()
            with open('C:\\Users\\Nayab Moazam\\Python\\ml-latest-small\\movies.csv', mode='r', encoding='UTF-8') as o:
                for line in o:
                    fields=line.rstrip('\n').split(',')
                    Ids=fields[0]
                    movieTitle=fields[1]
                    idslist.append(Ids) 
                    titlelist.append(movieTitle)

